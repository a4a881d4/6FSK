import scipy.signal as signal
import numpy as np

class rfir:
	def __init__(self):
		self.coeff = np.array([
  4.208031672392e-18, 0.004629459923163, 0.009047041497721,  0.01252082429594,
    0.01438029253315,  0.01412504545824,  0.01151971616976, 0.006660289911986,
  -4.567403720573e-18,-0.007672150763441, -0.01530103760401, -0.02167738947882,
   -0.02558005720523, -0.02593167919538, -0.02194807037218, -0.01326143806388,
  4.794858471924e-18,  0.01718849445542,  0.03717504756722,  0.05844741945071,
    0.07925801727339,  0.09780514966336,   0.1124264550919,   0.1217813098765,
               0.125,   0.1217813098765,   0.1124264550919,  0.09780514966336,
    0.07925801727339,  0.05844741945071,  0.03717504756722,  0.01718849445542,
  4.794858471924e-18, -0.01326143806388, -0.02194807037218, -0.02593167919538,
   -0.02558005720523, -0.02167738947882, -0.01530103760401,-0.007672150763441,
  -4.567403720573e-18, 0.006660289911986,  0.01151971616976,  0.01412504545824,
    0.01438029253315,  0.01252082429594, 0.009047041497721, 0.004629459923163,
  4.208031672392e-18
  ])

	def filter(self,x):
		return signal.convolve(x,self.coeff)

def main():
	x = np.array([1, -1]*300)
	f = rfir()
	y = f.filter(x)
	print y
	return y
	
if __name__ == '__main__':
	y = main()